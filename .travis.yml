jobs:
  include:
  - stage: test
    language: rust
    os: linux
    rust: nightly
    before_install:
      - sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable -y
      - sudo apt-get update
      - sudo apt-get install -y libgdal-dev
      - export GDAL_STATIC=1
    script:
      - bash ./build-test-data.sh
      - cargo build --workspace
      - cargo test --workspace -- --test-threads 1
    services:
      - redis
      - docker
  - stage: test
    language: node_js
    node_js: 12.16
    install:
    - npm install
    script:
      - bash ./format.sh check
      - npm run build
  - stage: deploy staging
    language: node_js
    node_js: 12.16
    os: linux
    services:
      - docker
    before_install:
      - openssl aes-256-cbc -K $encrypted_be519dac41c7_key -iv $encrypted_be519dac41c7_iv
        -in travis_id_rsa.enc -out ./travis_id_rsa -d
      - chmod 600 travis_id_rsa
      - echo "$SERVER_PUBLIC_SSH" >> $HOME/.ssh/known_hosts
    install:
      - npm i
      - npm i webpack-cli
    script:
      - npm run build_prod || exit 1
      - docker build . -t laps-build || exit 1
      - docker run --name laps-build -it laps-build || exit 1
      - docker cp laps-build:/workdir/target/release/laps . || exit 1
      - ssh -i travis_id_rsa staging@laps.website sudo systemctl stop staging.service || exit 1
      - scp -r -i travis_id_rsa dist config laps Rocket.toml staging@laps.website:~ || exit 1
      - ssh -i travis_id_rsa staging@laps.website sudo systemctl restart staging.service || exit 1
stages:
  - test
  - name: deploy staging
    if: branch = staging
